{"version":3,"file":"flowBuilder.js","sourceRoot":"","sources":["../../src/webview/flowBuilder.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n// will create a build func and then call the helper funcs to return an object\n// make a new instance of this class in flow, call the build method, and pass this as state\n\ninterface Node {\n  id: string;\n  data: {\n    label: React.ReactNode;\n  };\n  type: string;\n  position: { x: number, y: number };\n  style: {\n    borderRadius: string;\n    borderWidth: string;\n    borderColor: string;\n    display: string;\n    justifyContent: string;\n    placeItems: string;\n    backgroundColor: string;\n  };\n}\n\ninterface Edge {\n  id: string;\n  source: string;\n  target: string;\n  type: string;\n  animated: boolean;\n}\n\ninterface ParsedDataItem {\n  fileName: string;\n  isClientComponent: boolean;\n  children?: ParsedDataItem[];\n  thirdParty?: boolean;\n  reactRouter?: boolean;\n}\n\ninterface Settings {\n  thirdParty: boolean;\n  reactRouter: boolean;\n}\n\nclass FlowBuilder {\n  private parsedData: ParsedDataItem[];\n  private viewData: ParsedDataItem[];\n  private id: number;\n  private x: number;\n  private y: number;\n  private edgeId: number;\n  public initialEdges: Edge[];\n  public initialNodes: Node[];\n\n  constructor(data: ParsedDataItem) {\n    this.parsedData = [data];\n    this.id = 0;\n    this.x = 0;\n    this.y = 0;\n    this.initialNodes = [];\n    this.initialEdges = [];\n    this.viewData = [];\n    this.edgeId = 0;\n  }\n\n  private buildNodesArray(parsedData: ParsedDataItem[] | undefined, x: number = this.x, y: number = this.y): void {\n    if (!parsedData) return;\n\n    parsedData.forEach((item) => {\n      const node: Node = {\n        id: (++this.id).toString(),\n        data: {\n          label: (\n            <div className=\"text-sm font-medium text-ellipsis overflow-hidden ...\" key={this.id}>{item.fileName}</div>\n          )\n        },\n        // type: item.depth === 0 ? 'input' : '',\n        type: 'default',\n        position: { x: (x += 40), y: (y += 30) },\n        style: {\n          borderRadius: '6px',\n          borderWidth: '2px',\n          borderColor: '#6b7280',\n          display: 'flex',\n          justifyContent: 'center',\n          placeItems: 'center',\n          backgroundColor: `${(item.isClientComponent) ? '#fdba74' : '#93C5FD'}`,\n        },\n      };\n      this.initialNodes.push(node);\n      if (item.children) {\n        this.buildNodesArray(item.children, (this.x += 40), (this.y += 30));\n      }\n    });\n  };\n\n  private buildEdgesArray(parsedData: ParsedDataItem[] | undefined, parentID?: number): void {\n    if (!parsedData) return;\n\n    parsedData.forEach((item) => {\n      const nodeID = ++this.edgeId;\n      if (parentID) {\n        const edge: Edge = {\n          id: `e${parentID}-${nodeID}`,\n          source: parentID.toString(),\n          target: nodeID.toString(),\n          type: 'bezier',\n          animated: false,\n        };\n        this.initialEdges.push(edge);\n      }\n      if (item.children) {\n        this.buildEdgesArray(item.children, nodeID);\n      }\n    });\n  }\n\n  public build(settings: Settings): void {\n    const treeParsed = JSON.parse(JSON.stringify(this.parsedData[0]));\n    // console.log('settings: ', settings);\n    const traverse = (node: ParsedDataItem): void => {\n      let validChildren: ParsedDataItem[] = [];\n\n      for (let i = 0; i < node.children?.length; i++) {\n        if (\n          node.children[i].thirdParty &&\n          settings.thirdParty &&\n          !node.children[i].reactRouter\n        ) {\n          validChildren.push(node.children[i]);\n        } else if (node.children[i].reactRouter && settings.reactRouter) {\n          validChildren.push(node.children[i]);\n        } else if (\n          !node.children[i].thirdParty &&\n          !node.children[i].reactRouter\n        ) {\n          validChildren.push(node.children[i]);\n        }\n      }\n\n      // Update children with only valid nodes, and recurse through each node\n      node.children = validChildren;\n      node.children.forEach((child) => {\n        traverse(child);\n      });\n    }\n    traverse(treeParsed);\n    // Update the viewData state\n    this.viewData = ([treeParsed]);\n    console.log('viewData:', this.viewData);\n    this.buildNodesArray(this.viewData);\n    this.buildEdgesArray(this.viewData);\n  }\n}\n\nexport default FlowBuilder;"]}