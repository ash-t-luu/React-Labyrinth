{"version":3,"file":"parser.js","sourceRoot":"","sources":["../src/parser.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as babel from '@babel/parser';\nimport { getNonce } from './getNonce';\nimport { ImportObj } from './types/ImportObj';\nimport { Tree } from \"./types/tree\";\nimport { File } from '@babel/types';\n\n//     // function to determine server or client component (can look for 'use client' and 'hooks')\n//     // input: ast node (object)\n//     // output: boolean\n// checkForClientString(node) {\n//     if (node.type === 'Directive') {\n//         console.log('node', node);\n//         // access the value property of the Directive node\n//         console.log('Directive Value:', node.value);\n//         // check if the node.value is a 'DirectiveLiteral' node\n//         if (node.value && node.value.type === 'DirectiveLiteral') {\n//             // check the value to see if it is 'use client'\n//             if (typeof node.value.value === 'string' && node.value.value.trim() === 'use client') {\n//                 // access the value property of the 'DirectiveLiteral' node\n//                 console.log('DirectiveLiteral Value:', node.value.value);\n//                 // might need to do something else here to make it known as client type\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n\nexport class Parser {\n    entryFile: string;\n    tree: Tree | undefined;\n\n    constructor(filePath: string) {\n        // Fix when selecting files in wsl file system\n        this.entryFile = filePath;\n        if (process.platform === 'linux' && this.entryFile.includes('wsl$')) {\n            this.entryFile = path.resolve(\n                filePath.split(path.win32.sep).join(path.posix.sep)\n            );\n            this.entryFile = '/' + this.entryFile.split('/').slice(3).join('/');\n            // Fix for when running wsl but selecting files held on windows file system\n        } else if (\n            process.platform === 'linux' &&\n            /[a-zA-Z]/.test(this.entryFile[0])\n        ) {\n            const root = `/mnt/${this.entryFile[0].toLowerCase()}`;\n            this.entryFile = path.join(\n                root,\n                filePath.split(path.win32.sep).slice(1).join(path.posix.sep)\n            );\n        }\n        this.tree = undefined;\n        // Break down and reasemble given filePath safely for any OS using path?\n    }\n\n    // method to generate component tree based on current entryFile\n    public parse(): Tree {\n        // Create root Tree node\n        const root = {\n            id: getNonce(),\n            name: path.basename(this.entryFile).replace(/\\.(t|j)sx?$/, ''),\n            fileName: path.basename(this.entryFile),\n            filePath: this.entryFile,\n            importPath: '/', // this.entryFile here breaks windows file path on root e.g. C:\\\\ is detected as third party\n            expanded: false,\n            depth: 0,\n            count: 1,\n            thirdParty: false,\n            reactRouter: false,\n            reduxConnect: false,\n            children: [],\n            parentList: [],\n            props: {},\n            error: '',\n            isClientComponent: false,\n        };\n        this.tree = root;\n        this.parser(root);\n        return this.tree;\n    }\n\n    public getTree(): Tree {\n        return this.tree;\n    }\n\n    // Set Sapling Parser with a specific Data Tree (from workspace state)\n    public setTree(tree: Tree) {\n        this.entryFile = tree.filePath;\n        this.tree = tree;\n    }\n\n    public updateTree(filePath: string): Tree {\n        let children: any[] = [];\n\n        const getChildNodes = (node: Tree): void => {\n            const { depth, filePath, expanded } = node;\n            children.push({ depth, filePath, expanded });\n        };\n\n        const matchExpand = (node: Tree): void  => {\n            for (let i = 0; i < children.length; i += 1) {\n                const oldNode = children[i];\n                if (\n                    oldNode.depth === node.depth &&\n                    oldNode.filePath === node.filePath &&\n                    oldNode.expanded\n                ) {\n                    node.expanded = true;\n                }\n            }\n        };\n\n        const callback = (node: Tree): void => {\n            if (node.filePath === filePath) {\n                node.children.forEach((child) => {\n                    this.traverseTree(getChildNodes, child);\n                });\n\n                const newNode = this.parser(node);\n\n                this.traverseTree(matchExpand, newNode);\n\n                children = [];\n            }\n        };\n\n        this.traverseTree(callback, this.tree);\n        return this.tree!;\n    }\n\n    // Traverses the tree and changes expanded property of node whose id matches provided id\n    public toggleNode(id: string, expanded: boolean): Tree{\n        const callback = (node: { id: string; expanded: boolean }) => {\n            if (node.id === id) {\n                node.expanded = expanded;\n            }\n        };\n\n        this.traverseTree(callback, this.tree);\n        return this.tree!;\n    }\n\n    // Traverses all nodes of current component tree and applies callback to each node\n    private traverseTree(callback: Function, node: Tree | undefined = this.tree): void {\n        if (!node) {\n            return;\n        }\n\n        callback(node);\n\n        node.children.forEach((childNode) => {\n            this.traverseTree(callback, childNode);\n        });\n    }\n\n    // Recursively builds the React component tree structure starting from root node\n    private parser(componentTree: Tree): Tree | undefined {\n        // If import is a node module, do not parse any deeper\n        if (!['\\\\', '/', '.'].includes(componentTree.importPath[0])) {\n            componentTree.thirdParty = true;\n            if (\n                componentTree.fileName === 'react-router-dom' ||\n                componentTree.fileName === 'react-router'\n            ) {\n                componentTree.reactRouter = true;\n            }\n            return;\n        }\n\n        // Check that file has valid fileName/Path, if not found, add error to node and halt\n        const fileName = this.getFileName(componentTree);\n        if (!fileName) {\n            componentTree.error = 'File not found';\n            return;\n        }\n\n        // If current node recursively calls itself, do not parse any deeper:\n        if (componentTree.parentList.includes(componentTree.filePath)) {\n            return;\n        }\n\n        // Create abstract syntax tree of current component tree file\n        let ast: babel.ParseResult<File>;\n        try {\n            ast = babel.parse(\n                fs.readFileSync(path.resolve(componentTree.filePath), 'utf-8'),\n                {\n                    sourceType: 'module',\n                    tokens: true,\n                    plugins: ['jsx', 'typescript'],\n                }\n            );\n        } catch (err) {\n            componentTree.error = 'Error while processing this file/node';\n            return componentTree;\n        }\n\n        // Find imports in the current file, then find child components in the current file\n        const imports = this.getImports(ast.program.body);\n\n        if (this.getCallee(ast.program.body)) {\n            componentTree.isClientComponent = true;\n        } else {\n            componentTree.isClientComponent = false;\n        }\n\n        // console.log('componentTree.isClientComponent', componentTree.isClientComponent);\n        // console.log('--------------------------------')\n        // Get any JSX Children of current file:\n        if (ast.tokens) {\n            componentTree.children = this.getJSXChildren(\n                ast.tokens,\n                imports,\n                componentTree,\n            );\n        }\n\n        // Check if current node is connected to the Redux store\n        if (ast.tokens) {\n            componentTree.reduxConnect = this.checkForRedux(ast.tokens, imports);\n        }\n\n        // Recursively parse all child components\n        componentTree.children.forEach((child) => this.parser(child));\n        return componentTree;\n    }\n\n    // Finds files where import string does not include a file extension\n    private getFileName(componentTree: Tree): string | undefined {\n        const ext = path.extname(componentTree.filePath);\n        let fileName: string | undefined = componentTree.fileName;\n\n        if (!ext) {\n            // Try and find file extension that exists in directory:\n            const fileArray = fs.readdirSync(path.dirname(componentTree.filePath));\n            const regEx = new RegExp(`${componentTree.fileName}.(j|t)sx?$`);\n            fileName = fileArray.find((fileStr) => fileStr.match(regEx));\n            fileName ? (componentTree.filePath += path.extname(fileName)) : null;\n        }\n        return fileName;\n    }\n\n    // Extracts Imports from current file\n    // const Page1 = lazy(() => import('./page1')); -> is parsed as 'ImportDeclaration'\n    // import Page2 from './page2'; -> is parsed as 'VariableDeclaration'\n    // input: array of objects: ast.program.body\n    // output: object of imoprts\n    private getImports(body: { [key: string]: any }[]): ImportObj {\n        const bodyImports = body.filter((item) => item.type === 'ImportDeclaration' || 'VariableDeclaration');\n\n        return bodyImports.reduce((accum, curr) => {\n            if (curr.type === 'ImportDeclaration') {\n                curr.specifiers.forEach(({ local, imported }) => {\n                    accum[local.name] = {\n                        importPath: curr.source.value,\n                        importName: imported ? imported.name : local.name,\n                    };\n                });\n            }\n            if (curr.type === 'VariableDeclaration' && curr.declarations) {\n                const importPath = this.findVarDecImports(curr.declarations[0]);\n                if (importPath) {\n                    const importName = curr.declarations[0].id.name;\n                    accum[importName] = {\n                        importPath,\n                        importName\n                    };\n                }\n            }\n            return accum;\n        }, {});\n    }\n\n    private findVarDecImports(ast: { [key: string]: any }): string | boolean {\n        // find import path in variable declaration and return it,\n        if (ast.hasOwnProperty('callee') && ast.callee.type === 'Import') {\n            return ast.arguments[0].value;\n        }\n        // Otherwise look for imports in any other non null/undefined objects in the tree:\n        for (let key in ast) {\n            if (ast.hasOwnProperty(key) && typeof ast[key] === 'object' && ast[key]) {\n                const importPath = this.findVarDecImports(ast[key]);\n                if (importPath) {\n                    return importPath;\n                }\n            }\n        }\n        return false;\n    }\n\n    // helper function to determine component type (client)\n    // input: ast.program.body \n    // output: boolean \n    private getCallee(body: { [key: string]: any }[]): boolean {\n        const defaultErr = (err,) => {\n            return {\n                method: 'Error in getCallee method of Parser:',\n                log: err,\n            }\n        };\n\n        const bodyCallee = body.filter((item) => item.type === 'VariableDeclaration');\n        if (bodyCallee.length === 0) return false;\n\n        const calleeHelper = (item) => {\n            const hooksObj = {\n                useState: 0,\n                useContext: 0,\n                useRef: 0,\n                useImperativeHandle: 0,\n                useNavigate: 0,\n                useLocation: 0,\n                useLayoutEffect: 0,\n                useInsertionEffect: 0,\n                useMemo: 0,\n                useCallback: 0,\n                useTransition: 0,\n                useDeferredValue: 0,\n                useEffect: 0,\n                useReducer: 0,\n                useDispatch: 0,\n                useActions: 0,\n                useSelector: 0,\n                bindActionCreators: 0,\n            }\n            if (item.type === 'VariableDeclaration') {\n                try {\n                    let calleeName = item.declarations[0]?.init?.callee?.name;\n                    if (hooksObj.hasOwnProperty(calleeName) || (typeof calleeName === 'string' && calleeName.startsWith('use'))) {\n                        return true;\n                    }\n                }\n                catch (err) {\n                    const error = defaultErr(err);\n                    console.error(error.method, '\\n', error.log);\n                }\n            }\n            else if (item.type === 'ExpressionStatement') {\n                try {\n                    const calleeName = item.expression?.callee?.name;\n                    if (calleeName === undefined) return false;\n                    if (hooksObj.hasOwnProperty(calleeName) || (typeof calleeName === 'string' && calleeName.startsWith('use'))) {\n                        return true;\n                    }\n                }\n                catch (err) {\n                    const error = defaultErr(err);\n                    console.error(error.method, '\\n', error.log);\n                }\n            }\n            return false;\n        }\n\n        if (bodyCallee.length === 1) {\n            const calleeArr = bodyCallee[0].declarations[0]?.init?.body?.body;\n            if (calleeArr === undefined) return false;\n\n            let checkTrue = false;\n            for (let i = 0; i < calleeArr.length; i++) {\n                if (checkTrue) return true;\n                checkTrue = calleeHelper(calleeArr[i]);\n            }\n            return checkTrue;\n        }\n        else if (bodyCallee.length > 1) {\n            let calleeArr: [];\n            for (let i = 0; i < bodyCallee.length; i++) {\n                try {\n                    if (bodyCallee[i].declarations[0]?.init?.body?.body) {\n                        calleeArr = bodyCallee[i].declarations[0].init.body.body;\n                    }\n                }\n                catch (err) {\n                    const error = defaultErr(err);\n                    console.error(error.method, '\\n', error.log);\n                }\n            }\n\n            if (calleeArr === undefined) return false;\n            let checkTrue = false;\n            for (let i = 0; i < calleeArr.length; i++) {\n                if (checkTrue) return true;\n                checkTrue = calleeHelper(calleeArr[i]);\n            }\n            return checkTrue;\n        }\n    }\n\n    // Finds JSX React Components in current file\n    private getJSXChildren(\n        astTokens: any[],\n        importsObj: ImportObj,\n        parentNode: Tree\n      ): Tree[] {\n\n    let childNodes: { [key: string]: Tree } = {};\n    let props: { [key: string]: boolean } = {};\n    let token: { [key: string]: any };\n\n        for (let i = 0; i < astTokens.length; i++) {\n            // Case for finding JSX tags eg <App .../>\n            if (\n                astTokens[i].type.label === 'jsxTagStart' &&\n                astTokens[i + 1].type.label === 'jsxName' &&\n                importsObj[astTokens[i + 1].value]\n            ) {\n                token = astTokens[i + 1];\n                props = this.getJSXProps(astTokens, i + 2);\n                childNodes = this.getChildNodes(\n                    importsObj,\n                    token,\n                    props,\n                    parentNode,\n                    childNodes,\n                );\n\n                // Case for finding components passed in as props e.g. <Route component={App} />\n            } else if (\n                astTokens[i].type.label === 'jsxName' &&\n                (astTokens[i].value === 'Component' ||\n                    astTokens[i].value === 'children') &&\n                importsObj[astTokens[i + 3].value]\n            ) {\n                token = astTokens[i + 3];\n                childNodes = this.getChildNodes(\n                    importsObj,\n                    token,\n                    props,\n                    parentNode,\n                    childNodes,\n                );\n            }\n        }\n        return Object.values(childNodes);\n    }\n\n    private getChildNodes(\n        imports: ImportObj,\n        astToken: { [key: string]: any },\n        props: { [key: string]: boolean },\n        parent: Tree,\n        children: { [key: string]: Tree }\n    ): { [key: string]: Tree } {\n        if (children[astToken.value]) {\n            children[astToken.value].count += 1;\n            children[astToken.value].props = {\n                ...children[astToken.value].props,\n                ...props,\n            };\n        } else {\n            // Add tree node to childNodes if one does not exist\n            children[astToken.value] = {\n                id: getNonce(),\n                name: imports[astToken.value]['importName'],\n                fileName: path.basename(imports[astToken.value]['importPath']),\n                filePath: path.resolve(\n                    path.dirname(parent.filePath),\n                    imports[astToken.value]['importPath']\n                ),\n                importPath: imports[astToken.value]['importPath'],\n                expanded: false,\n                depth: parent.depth + 1,\n                thirdParty: false,\n                reactRouter: false,\n                reduxConnect: false,\n                count: 1,\n                props: props,\n                children: [],\n                // consider adding the id to the parentList array somehow for D3 integration...\n                parentList: [parent.filePath].concat(parent.parentList),\n                error: '',\n                isClientComponent: false\n            };\n        }\n        return children;\n    }\n\n    // Extracts prop names from a JSX element\n    private getJSXProps(astTokens: { [key: string]: any }[],\n        j: number\n      ): { [key: string]: boolean } {\n        const props: any = {};\n        while (astTokens[j].type.label !== 'jsxTagEnd') {\n            if (\n                astTokens[j].type.label === 'jsxName' &&\n                astTokens[j + 1].value === '='\n            ) {\n                props[astTokens[j].value] = true;\n            }\n            j += 1;\n        }\n        return props;\n    }\n\n    // Checks if current Node is connected to React-Redux Store\n    private checkForRedux(astTokens: any[], importsObj: ImportObj): boolean {\n        // Check that react-redux is imported in this file (and we have a connect method or otherwise)\n        let reduxImported = false;\n        let connectAlias;\n        Object.keys(importsObj).forEach((key) => {\n            if (\n                importsObj[key].importPath === 'react-redux' &&\n                importsObj[key].importName === 'connect'\n            ) {\n                reduxImported = true;\n                connectAlias = key;\n            }\n        });\n\n        if (!reduxImported) {\n            return false;\n        }\n\n        // Check that connect method is invoked and exported in the file\n        for (let i = 0; i < astTokens.length; i += 1) {\n            if (\n                astTokens[i].type.label === 'export' &&\n                astTokens[i + 1].type.label === 'default' &&\n                astTokens[i + 2].value === connectAlias\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"]}